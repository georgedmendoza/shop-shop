{"ast":null,"code":"import { useReducer } from 'react';\nimport { UPDATE_PRODUCTS, UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from './actions';\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    // if action type value of `UPDATE_PRODUCTS`, return a new state obj w an updated products arrar\n    case UPDATE_PRODUCTS:\n      return { ...state,\n        products: [...action.products]\n      };\n    // if type value is the value of `UPDATE_CATEGORIES`, return a new state obj w an update categories array\n\n    case UPDATE_CATEGORIES:\n      return { ...state,\n        categories: [...action.categories]\n      };\n    //\n\n    case UPDATE_CURRENT_CATEGORY:\n      return { ...state,\n        currentCategory: action.currentCategory\n      };\n    // if it's none of these actions, do not update state at all and keep things the same!\n\n    default:\n      return state;\n  }\n};\nexport function useProductReducer(intialState) {\n  return useReducer(reducer, intialState);\n}","map":{"version":3,"sources":["C:/Users/georg/Desktop/projects/shop-shop/client/src/utils/reducers.js"],"names":["useReducer","UPDATE_PRODUCTS","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","reducer","state","action","type","products","categories","currentCategory","useProductReducer","intialState"],"mappings":"AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SACIC,eADJ,EAEIC,iBAFJ,EAGIC,uBAHJ,QAIO,WAJP;AAMA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtC,UAAQA,MAAM,CAACC,IAAf;AACI;AACA,SAAKN,eAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHG,QAAAA,QAAQ,EAAE,CAAC,GAAGF,MAAM,CAACE,QAAX;AAFP,OAAP;AAIJ;;AACA,SAAKN,iBAAL;AACI,aAAO,EACH,GAAGG,KADA;AAEHI,QAAAA,UAAU,EAAE,CAAC,GAAGH,MAAM,CAACG,UAAX;AAFT,OAAP;AAIJ;;AACA,SAAKN,uBAAL;AACI,aAAO,EACH,GAAGE,KADA;AAEHK,QAAAA,eAAe,EAAEJ,MAAM,CAACI;AAFrB,OAAP;AAIJ;;AACA;AACI,aAAOL,KAAP;AArBR;AAuBH,CAxBM;AA0BP,OAAO,SAASM,iBAAT,CAA2BC,WAA3B,EAAwC;AAC3C,SAAOZ,UAAU,CAACI,OAAD,EAAUQ,WAAV,CAAjB;AACH","sourcesContent":["import { useReducer } from 'react';\r\nimport {\r\n    UPDATE_PRODUCTS,\r\n    UPDATE_CATEGORIES,\r\n    UPDATE_CURRENT_CATEGORY\r\n} from './actions';\r\n\r\nexport const reducer = (state, action) => {\r\n    switch (action.type) {\r\n        // if action type value of `UPDATE_PRODUCTS`, return a new state obj w an updated products arrar\r\n        case UPDATE_PRODUCTS:\r\n            return {\r\n                ...state,\r\n                products: [...action.products]\r\n            };\r\n        // if type value is the value of `UPDATE_CATEGORIES`, return a new state obj w an update categories array\r\n        case UPDATE_CATEGORIES:\r\n            return {\r\n                ...state,\r\n                categories: [...action.categories]\r\n            }\r\n        //\r\n        case UPDATE_CURRENT_CATEGORY:\r\n            return {\r\n                ...state,\r\n                currentCategory: action.currentCategory\r\n            };\r\n        // if it's none of these actions, do not update state at all and keep things the same!\r\n        default: \r\n            return state;\r\n    }\r\n};\r\n\r\nexport function useProductReducer(intialState) {\r\n    return useReducer(reducer, intialState);\r\n}"]},"metadata":{},"sourceType":"module"}